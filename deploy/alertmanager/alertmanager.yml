# Alertmanager Configuration for Risk Control System
# Handles alert routing to PagerDuty, Telegram, and email

global:
  # Global configuration
  smtp_smarthost: 'smtp.gmail.com:587'
  smtp_from: 'alerts@mech-exo.com'
  pagerduty_url: 'https://events.pagerduty.com/v2/enqueue'

# Alert routing tree
route:
  # Default receiver
  receiver: 'risk-team'
  
  # Group alerts to reduce noise
  group_by: ['alertname', 'severity']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 12h
  
  # Routing rules
  routes:
    # Critical risk alerts -> PagerDuty + Telegram
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 10s
      repeat_interval: 5m
      
    # VaR breach alerts -> Immediate notification
    - match:
        alertname: VarBreachAlert
      receiver: 'var-breach'
      group_wait: 10s
      repeat_interval: 2m
      
    # System down alerts -> PagerDuty
    - match:
        alertname: SystemDownAlert
      receiver: 'system-down'
      group_wait: 30s
      repeat_interval: 5m
      
    # Warning alerts -> Telegram only
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 1m
      repeat_interval: 30m

# Alert receivers
receivers:
  # Default risk team notifications
  - name: 'risk-team'
    email_configs:
      - to: 'risk-team@mech-exo.com'
        subject: '[Mech-Exo] {{ .GroupLabels.alertname }}'
        body: |
          Alert: {{ .GroupLabels.alertname }}
          Severity: {{ .GroupLabels.severity }}
          
          {{ range .Alerts }}
          Description: {{ .Annotations.description }}
          Details: {{ .Annotations.summary }}
          Time: {{ .StartsAt }}
          {{ end }}
    
  # Critical alerts -> PagerDuty + Telegram
  - name: 'critical-alerts'
    pagerduty_configs:
      - routing_key: '{{ .ExternalURL }}/PAGERDUTY_INTEGRATION_KEY'  # Set via secret
        description: '{{ .GroupLabels.alertname }}: {{ .CommonAnnotations.summary }}'
        severity: 'critical'
        details:
          alertname: '{{ .GroupLabels.alertname }}'
          severity: '{{ .GroupLabels.severity }}'
          instance: '{{ .CommonLabels.instance }}'
          description: '{{ .CommonAnnotations.description }}'
    
    # Also send to Telegram for immediate visibility
    webhook_configs:
      - url: 'http://localhost:8080/webhook/telegram'  # Custom webhook
        send_resolved: true
        http_config:
          basic_auth:
            username: 'alertmanager'
            password_file: '/etc/alertmanager/webhook_password'
        title: 'üö® CRITICAL: {{ .GroupLabels.alertname }}'
        text: |
          Severity: {{ .GroupLabels.severity }}
          {{ range .Alerts }}
          {{ .Annotations.description }}
          Time: {{ .StartsAt.Format "15:04:05" }}
          {{ end }}
  
  # VaR breach alerts
  - name: 'var-breach'
    pagerduty_configs:
      - routing_key: '{{ .ExternalURL }}/PAGERDUTY_INTEGRATION_KEY'
        description: 'VaR Limit Breach: {{ .CommonAnnotations.summary }}'
        severity: 'critical'
        details:
          var_95: '{{ .CommonLabels.var_95 }}'
          var_limit: '{{ .CommonLabels.var_limit }}'
          utilization: '{{ .CommonLabels.utilization }}%'
    
    webhook_configs:
      - url: 'http://localhost:8080/webhook/telegram'
        title: '‚ö†Ô∏è VaR BREACH ALERT'
        text: |
          VaR 95%: ${{ .CommonLabels.var_95 }}
          Limit: ${{ .CommonLabels.var_limit }}
          Utilization: {{ .CommonLabels.utilization }}%
          
          Immediate action required!
  
  # System down alerts
  - name: 'system-down'
    pagerduty_configs:
      - routing_key: '{{ .ExternalURL }}/PAGERDUTY_INTEGRATION_KEY'
        description: 'Risk System Down: {{ .CommonAnnotations.summary }}'
        severity: 'critical'
        details:
          component: '{{ .CommonLabels.component }}'
          instance: '{{ .CommonLabels.instance }}'
          downtime: '{{ .CommonAnnotations.downtime }}'
  
  # Warning alerts (Telegram only)
  - name: 'warning-alerts'
    webhook_configs:
      - url: 'http://localhost:8080/webhook/telegram'
        send_resolved: true
        title: '‚ö†Ô∏è {{ .GroupLabels.alertname }}'
        text: |
          Severity: {{ .GroupLabels.severity }}
          {{ .CommonAnnotations.description }}
          
          Monitor closely but no immediate action required.

# Inhibition rules to reduce alert noise
inhibit_rules:
  # If system is down, don't alert on individual metrics
  - source_matchers:
      - alertname="SystemDownAlert"
    target_matchers:
      - alertname="DataStaleAlert"
      - alertname="HighVarAlert"
    equal: ['instance']
  
  # If VaR is breached, don't alert on warnings
  - source_matchers:
      - alertname="VarBreachAlert"
    target_matchers:
      - alertname="HighVarWarning"
    equal: ['instance']

# Alert templates
templates:
  - '/etc/alertmanager/templates/*.tmpl'