# Kubernetes Secret Manifest for Mech-Exo Risk Control
# Apply with: kubectl apply -f deploy/k8s/secret.yaml

apiVersion: v1
kind: Secret
metadata:
  name: mech-exo-secrets
  namespace: default
  labels:
    app: mech-exo
    component: risk-control
type: Opaque
stringData:
  # Critical secrets for risk management system
  # These must be set before deployment
  
  # Telegram Integration (REQUIRED)
  TELEGRAM_BOT_TOKEN: ""  # Set via: kubectl patch secret mech-exo-secrets -p '{"stringData":{"TELEGRAM_BOT_TOKEN":"YOUR_TOKEN"}}'
  TELEGRAM_CHAT_ID: ""    # Set via: kubectl patch secret mech-exo-secrets -p '{"stringData":{"TELEGRAM_CHAT_ID":"YOUR_CHAT_ID"}}'
  
  # AWS Integration (Optional - for S3 audit storage)
  AWS_ACCESS_KEY_ID: ""
  AWS_SECRET_ACCESS_KEY: ""
  AWS_DEFAULT_REGION: "us-east-1"
  
  # Prefect Cloud (Optional - for workflow orchestration)
  PREFECT_API_KEY: ""
  
  # Database Configuration
  DATABASE_URL: "sqlite:///data/trading.db"
  
  # Dashboard Configuration  
  DASH_HOST: "0.0.0.0"
  DASH_PORT: "8050"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mech-exo-config
  namespace: default
  labels:
    app: mech-exo
    component: risk-control
data:
  # Non-sensitive configuration
  NODE_OPTIONS: "--max-old-space-size=4096"
  LOG_LEVEL: "INFO"
  ENVIRONMENT: "production"
  
  # Risk Management Configuration
  RISK_VAR_95_LIMIT: "2000000"    # $2M daily VaR limit
  RISK_VAR_99_LIMIT: "3000000"    # $3M daily VaR limit
  RISK_POSITION_LIMIT: "0.15"    # 15% max position concentration
  
  # Alert Configuration
  ALERT_COOLDOWN_MINUTES: "5"    # Minimum time between duplicate alerts
  ALERT_RETRY_ATTEMPTS: "3"      # Number of retry attempts for failed alerts
  
  # Performance Configuration
  RISK_BATCH_SIZE: "500"         # Risk calculation batch size
  DASHBOARD_REFRESH_SECONDS: "30" # Dashboard refresh interval

---
# Usage Instructions:
# 1. Set secrets before deployment:
#    kubectl patch secret mech-exo-secrets -p '{"stringData":{"TELEGRAM_BOT_TOKEN":"1234567890:ABC-DEF..."}}'
#    kubectl patch secret mech-exo-secrets -p '{"stringData":{"TELEGRAM_CHAT_ID":"-1001234567890"}}'
#
# 2. Verify secrets are set:
#    kubectl get secret mech-exo-secrets -o yaml
#
# 3. Deploy application with secrets:
#    kubectl apply -f deploy/k8s/deployment.yaml
#
# 4. Check pod environment:
#    kubectl exec -it deployment/mech-exo -- env | grep TELEGRAM