# Redis Configuration for Market Data Caching
# Phase P11 Week 4 Day 1 - Performance Optimization

global:
  imageRegistry: ""
  imagePullSecrets: []
  redis:
    password: ${REDIS_PASSWORD}

# Redis Architecture
architecture: replication

# Auth configuration
auth:
  enabled: true
  sentinel: false
  password: ${REDIS_PASSWORD}

# Master configuration
master:
  count: 1
  
  # Resource allocation
  resources:
    limits:
      memory: 2Gi
      cpu: 1000m
    requests:
      memory: 512Mi
      cpu: 250m
  
  # Persistence for market data cache
  persistence:
    enabled: true
    storageClass: "gp3"
    size: 10Gi
    
  # Redis configuration
  configuration: |-
    # Memory management for market data
    maxmemory 1gb
    maxmemory-policy allkeys-lru
    
    # Performance tuning
    tcp-keepalive 60
    timeout 300
    
    # Append-only file for persistence
    appendonly yes
    appendfsync everysec
    
    # Save snapshots
    save 900 1
    save 300 10
    save 60 10000
    
    # Market data specific settings
    hash-max-ziplist-entries 512
    hash-max-ziplist-value 64
    
    # Connection limits
    maxclients 10000
  
  # Service configuration
  service:
    type: ClusterIP
    ports:
      redis: 6379
    
  # Pod disruption budget
  podDisruptionBudget:
    enabled: true
    minAvailable: 1

# Replica configuration
replica:
  replicaCount: 2
  
  # Resource allocation for replicas
  resources:
    limits:
      memory: 1Gi
      cpu: 500m
    requests:
      memory: 256Mi
      cpu: 125m
  
  # Persistence for replicas
  persistence:
    enabled: true
    storageClass: "gp3"
    size: 5Gi
  
  # Service configuration
  service:
    type: ClusterIP
    ports:
      redis: 6379

# Sentinel configuration (for HA)
sentinel:
  enabled: true
  masterName: mech-exo-redis
  quorum: 2
  
  # Sentinel resources
  resources:
    limits:
      memory: 256Mi
      cpu: 200m
    requests:
      memory: 128Mi
      cpu: 100m

# Network Policy
networkPolicy:
  enabled: true
  allowExternal: false
  ingressNSMatchLabels:
    name: mech-exo
  ingressNSPodMatchLabels:
    app: mech-exo

# Monitoring configuration
metrics:
  enabled: true
  
  # Redis exporter
  image:
    repository: bitnami/redis-exporter
    tag: 1.55.0
  
  # Service monitor for Prometheus
  serviceMonitor:
    enabled: true
    namespace: monitoring
    labels:
      app: redis
      release: prometheus
    interval: 30s
    
  # Custom metrics for market data cache
  extraArgs:
    - --check-keys=px:*,vol:*,bid:*,ask:*
    - --check-key-groups=market_data
  
  # Prometheus rules
  prometheusRule:
    enabled: true
    namespace: monitoring
    rules:
      - alert: RedisDown
        expr: redis_up == 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Redis is down"
          description: "Redis instance is not responding"
      
      - alert: RedisHighMemoryUsage
        expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Redis high memory usage"
          description: "Redis memory usage is above 80%"
      
      - alert: RedisLowCacheHitRatio
        expr: rate(redis_keyspace_hits_total[5m]) / (rate(redis_keyspace_hits_total[5m]) + rate(redis_keyspace_misses_total[5m])) < 0.8
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Redis low cache hit ratio"
          description: "Redis cache hit ratio is below 80%"

# Security context
podSecurityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001

# Container security context
containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true
  readOnlyRootFilesystem: false

# TLS configuration
tls:
  enabled: false
  authClients: true
  autoGenerated: false

# Volume permissions
volumePermissions:
  enabled: false

# Sysctl configuration
sysctlImage:
  enabled: false

# Common labels
commonLabels:
  app.kubernetes.io/part-of: mech-exo
  component: cache
  tier: data

# Common annotations
commonAnnotations:
  app.kubernetes.io/managed-by: helm
  meta.helm.sh/release-namespace: default

# Extra environment variables
extraEnvVars:
  - name: REDIS_REPLICATION_MODE
    value: master
  - name: ALLOW_EMPTY_PASSWORD
    value: "no"

# Init containers
initContainers: []

# Sidecar containers for monitoring
sidecars:
  - name: redis-cache-monitor
    image: alpine:3.18
    command:
      - sh
      - -c
      - |
        while true; do
          echo "$(date): Redis cache monitoring"
          sleep 300
        done
    resources:
      limits:
        cpu: 50m
        memory: 64Mi
      requests:
        cpu: 25m
        memory: 32Mi

# Custom configuration for market data caching
customConfig:
  # Market data key patterns
  keyPatterns:
    price: "px:{symbol}"
    volume: "vol:{symbol}"
    bid: "bid:{symbol}"
    ask: "ask:{symbol}"
    orderbook: "ob:{symbol}:{depth}"
  
  # TTL settings (in seconds)
  ttlSettings:
    price: 1        # 1 second for real-time prices
    volume: 5       # 5 seconds for volume data
    orderbook: 2    # 2 seconds for order book
    static: 3600    # 1 hour for static reference data
  
  # Cache warming settings
  warmup:
    enabled: true
    symbols: ["AAPL", "GOOGL", "MSFT", "TSLA", "AMZN", "NVDA", "META", "NFLX"]
    schedule: "*/30 * * * *"  # Every 30 minutes

# Backup configuration
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention: 7  # Keep 7 days
  storage:
    type: s3
    bucket: mech-exo-redis-backups
    region: us-east-1